/**
 * Script para limpar arquivos tempor√°rios e desnecess√°rios do projeto
 */

const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

// Arquivos tempor√°rios que podem ser removidos
const tempFilesToRemove = [
  'tsconfig.tsbuildinfo',
];

// Diret√≥rios que podem ser limpos
const dirsToClean = [
  '.next',
  'out',
  'build',
  'node_modules/.cache',
];

// Fun√ß√£o para remover arquivos
function removeFiles(files) {
  files.forEach(file => {
    try {
      if (fs.existsSync(file)) {
        fs.unlinkSync(file);
        console.log(`‚úÖ Arquivo removido: ${file}`);
      }
    } catch (error) {
      console.error(`‚ùå Erro ao remover arquivo ${file}:`, error.message);
    }
  });
}

// Fun√ß√£o para limpar diret√≥rios
function cleanDirectories(directories) {
  directories.forEach(dir => {
    const dirPath = path.resolve(process.cwd(), dir);
    try {
      if (fs.existsSync(dirPath)) {
        console.log(`üßπ Limpando diret√≥rio: ${dir}`);
        // No Windows, usamos o comando rd /s /q para remover diret√≥rios
        if (process.platform === 'win32') {
          execSync(`rd /s /q "${dirPath}"`, { stdio: 'inherit' });
          // Recriamos o diret√≥rio vazio
          fs.mkdirSync(dirPath, { recursive: true });
        } else {
          // Em sistemas Unix, usamos rm -rf
          execSync(`rm -rf "${dirPath}"`, { stdio: 'inherit' });
          // Recriamos o diret√≥rio vazio
          fs.mkdirSync(dirPath, { recursive: true });
        }
        console.log(`‚úÖ Diret√≥rio limpo: ${dir}`);
      }
    } catch (error) {
      console.error(`‚ùå Erro ao limpar diret√≥rio ${dir}:`, error.message);
    }
  });
}

// Fun√ß√£o principal
function cleanup() {
  console.log('üöÄ Iniciando limpeza do projeto...');
  
  // Remover arquivos tempor√°rios
  console.log('\nüìÑ Removendo arquivos tempor√°rios...');
  removeFiles(tempFilesToRemove);
  
  // Limpar diret√≥rios de cache
  console.log('\nüìÅ Limpando diret√≥rios de cache...');
  cleanDirectories(dirsToClean);
  
  console.log('\n‚ú® Limpeza conclu√≠da!');
}

// Executar limpeza
cleanup();